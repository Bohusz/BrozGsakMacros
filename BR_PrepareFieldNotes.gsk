#*******************************************
# MacVersion = 1.11
# MacDescription = PrepareFieldNotes
# MacAuthor = roztocil
# MacFileName = BR_PrepareFieldNotes.gsk
# MacUrl = http://www.xlii.cz/downloads/gsak/macros/BR_PrepareFieldNotes.gsk
#--------------------------------------------------------------------------------------
# 1.01 2010-12-26:
#    - Doplnìno generování logù typu "Didn't Find It".
#    - Dopnìno generování správného "Found it" textu podle druhu keše.
# 1.02 2013-04-07:
#    - Oprava generování èasové známky u nepøesnì urèených èasù nálezu.
# 1.03 2014-02-18:
#    - Podpora pro "nezaøazené" nálezy
# 1.04 2016-04-02:
#    - Oprava: pøeklep na øádku 119 (nyní 121), "$xxhour" místo správného "$xx_hour".
# 1.05 2017-03-06:
#    - Zmìna standardního URL pro "nezaøazené" odlovy,
#    - doplnìna volba "Geopivo" pro spoleèné odlovy po geopivu.
# 1.06 2017-03-23:
#    - oprava pøeklepu v URL pro nezaøazené keše,
#    - zmìna formátování odkazu na blog z UBB na Markdown
# 1.07 2017-12-28:
#    - nová volba "Use Stored Blog Name", která, pokud je naplnìn uživatelský atribut
#      "BlogPageName", sestaví URL stránky ze základu URL a hodnoty tohoto atributu
# 1.08 2018-01-07:
#    - po sestavení dat se zobrazí dialog, umožòující:
#      - editaci vygenerovaných dat
#      - uložení zmìn do souboru
#      - otevøení souboru v "poznámkovém bloku"
#      - nahrání zobrazených (a pøípadnì zeditovaných) dat pøímo na GEOCACHING.COM
#    - dialog se sám zavøe po 15 sekundách neèinnosti
# 1.09 2019-04-03:
#    - Pøechod na GCAPI2.
# 1.10 2019-06-17:
#    - Do generovaných Field Notes se novì vkládá log pøipravený v GSAK (mzi datum
#      a "more...") a GSAK poznámka (obvykle obsahuje pùvodní Field Note (za "more...").
# 1.11 2021-11-20:
#    - Oprava detekce prázdného GSAK logu.
#**************************************************************************************

DECLARE var=$NULL type=NUMERIC
$BASE_URL         = "http://kacer-bob.blogspot.cz"
$NEZARAZENO_OLD   = "http://kacer-bob.blogspot.cz/2014/02/nezarazeno.html"
$NEZARAZENO_URL   = "$BASE_URL/p/nerazene.html"
$GEOPIVO_URL      = "$BASE_URL/p/ge.html"
$STORED_BLOG_NAME = "BlogPageName"
$NODATE           = [00000000]
$NL               = CHR(13) + CHR(10)

GOSUB name=ReadMainForm

IF NOT($AppendToFile) OR NOT(FileExists($TargetFieldNotesFile))
  $p_filename = $TargetFieldNotesFile
  GOSUB name=PrepareFile
ENDIF

BEGINCASE
  CASE $NotFiled
    $global_blog_url = $NEZARAZENO_URL
  CASE $Geopivo
    $global_blog_url = $GEOPIVO_URL
  OTHERWISE
    $global_blog_url = $BlogUrl
ENDCASE

$allFieldNotes = ""

GOTO position=TOP
WHILE NOT($_EOL)
  $par1 = $d_foundByMeDate
  IF $par1 = $NODATE
    $par1 = $d_DnfDate
  ENDIF
  $par2 = $d_UserData
  $par3 = $UtcOffset
  GOSUB name=CalcTimeStamp

  BEGINCASE
    # další typy logù:
    #   Needs Archived
    #   Needs Maintenance
    #   Owner Maintenance
    CASE NOT($d_DNF) AND NOT($d_found)
      $logType = "Write note"
    CASE $d_DNF
      $logType = "Didn't find it"
    #-----------------------------------------
    # FOUND IT se liší podle typy keše:
    #   A = Project Ape         L = Locationless     V = Virtual
    #   B = Letterbox           M = Multi            W = Webcam
    #   C = Cache In Trash Out  O = Other            X = Maze Exhibit
    #   E = Event               R = Earth            Y = Waymark
    #   G = BenchMark           T = Traditional      Z = Mega event
    #   I = Wherigo             U = Unknown/Mystery
    #
    CASE AT($d_cacheType, "LIMRTU") > 0
      # Standardní keše.
      $logType = "Found it"
    CASE AT($d_cacheType, "CEZ") > 0
      # Eventy.
      $logType = "Attended"
    CASE $d_cacheType = "W"
      # Webcam keše.
      $logType = "Webcam Photo Taken"
    OTHERWISE
      # Ostatní snad jsou podobné standardním... :-\
      $logType = "Found it"
  ENDCASE

  # Pøipravíme základ textu - kvùli tomuhle (a datumu, taky) to hlavnì dìláme...  
  $logText = ""
  IF $d_userSort <> $NULL
    GOSUB name=LogTextSeparator
    $logText = "$logText#$d_userSort"
  ENDIF
  IF NOT(ISEMPTY($d_userData))
    GOSUB name=LogTextSeparator
    $logText = "$logText$d_userData - "
  ENDIF
  $gsakLog = REPLACE(CHR(10), "·", REPLACE(CHR(13), "", TRIM(EXTRACT($d_UserNote,"$~",2))))
  IF NOT(ISEMPTY($gsakLog))
    $logText = "$gsakLog $logText"
  ENDIF
  $blog_url = $global_blog_url
  IF $UseStoredBlogName
    GOSUB name=PrepareStoredUrlIfExists
  ENDIF
  IF NOT(ISEMPTY($blog_url))
    GOSUB name=LogTextSeparator
    # UBB: $logText = "$logText[url=$blog_url][size=1][i]more...[/i][/size][/url]"
    $logText = "$logText[*more...*]($blog_url)"
  ENDIF
  $gsakNotes = REPLACE(CHR(10), "·", REPLACE(CHR(13), "", TRIM(EXTRACT($d_UserNote,"$~",1))))
  IF REGEX("^\[\d+[.-]\d+[.-]\d+ +\d+:\d+,\s*[^\]]+]\s*\x22+s*$", $gsakNotes)
    $gsakNotes = ""
  ENDIF
  IF NOT(ISEMPTY($gsakNotes))
    $logText = "$logText · **GSAK:** $gsakNotes"
  ENDIF

  $line = "$d_code,$timeStamp,$logType,"
  $line = $line + QUOTE("$logText")
  $line = "$line$NL"

  $allFieldNotes = "$allFieldNotes$line"

  $p_filename = $TargetFieldNotesFile
  $p_text     = $line
  GOSUB name=WriteTextToFile

  GOTO position=NEXT
ENDWHILE

GOSUB name=ReadFinalForm

RETURN
#--------------------------------------------------------------------------------------

BEGINSUB name=PrepareStoredUrlIfExists
  $xx_blogName = CustomGet($STORED_BLOG_NAME)
  IF NOT(ISEMPTY($xx_blogName))
    $blog_url = "$BASE_URL/$xx_blogName.html"
  ENDIF
ENDSUB

BEGINSUB name=CalcTimeStamp
  $xx_date = $par1
  $xx_hour = VAL(SUBSTR(REGEXREPLACE("[^.:0-9]", $par2, ""), 1, 2))
  $xx_min = VAL(SUBSTR(REGEXREPLACE("[^.:0-9]", $par2, ""), 4, 2))
  $xx_hour = VAL(REGEXSUB("\d+", $par2, 1, 0))
  $xx_min = VAL(REGEXSUB("\d+", $par2, 2, 0))
  $xx_off = VAL($par3)

  $xx_hour = $xx_hour + $xx_off
  WHILE $xx_hour < 0
    $xx_hour = $xx_hour + 24
    $xx_date = $xx_date - 1
  ENDWHILE
  WHILE $xx_hour > 24
    $xx_hour = $xx_hour - 24
    $xx_date = $xx_date + 1
  ENDWHILE

  $timeStamp = DATETOSTRING($xx_date)
  $timeStamp = SUBSTR($timeStamp, 1, 4) + "-" + SUBSTR($timeStamp, 5, 2) + "-" + SUBSTR($timeStamp, 7, 2)
  $timeStamp = $timeStamp + "T" + STR($xx_hour, 2, 0) + ":" + STR($xx_min, 2, 0) + "Z"
  $timeStamp = REPLACE(" ", "0", $timeStamp)
ENDSUB

BEGINSUB name=LogTextSeparator
  IF ISEMPTY($logText) OR $logText = ""
    EXITSUB
  ENDIF
  IF ASC(RIGHT($logText, 1)) <= 32
    EXITSUB
  ENDIF
  $logText = "$logText "
ENDSUB

BEGINSUB name=PrepareFile
  IF FileExists($p_filename)
     FileErase file=$p_filename onerror=ABORT
  ENDIF
  # zapíšeme BOM
  $result = AppendFile($p_filename, UTF16("", "e"))
  GOSUB name=CheckFileOpResult
ENDSUB

BEGINSUB name=WriteTextToFile
  $xx_text = UTF16($p_text, "e")
  # Odstraníme BOM
  $xx_text = SUBSTR($xx_text, 3, 0)
  $result = AppendFile($p_filename, $xx_text)
  GOSUB name=CheckFileOpResult
ENDSUB

BEGINSUB name=CheckFileOpResult
  IF LEFT($result, 7) = "*Error*"
    PAUSE msg=$result
    CANCEL
  ENDIF
ENDSUB

BEGINSUB name=ReadMainForm
  MacSettings type=R filecheck=N vars=TargetFieldNotesFile,BlogUrl,UtcOffset,AppendToFile,UseStoredBlogName
  $UseBlogUrl = TRUE
  WHILE 1=1
    $result = Form($mainForm, "")
    BEGINCASE
      CASE $result = "OkButton"
        IF IsEmpty($UtcOffset) OR REGEX("[-+]\d+", $UtcOffset)
          MacSettings type=S vars=TargetFieldNotesFile,BlogUrl,UtcOffset,AppendToFile,UseStoredBlogName
          BREAK
        ENDIF
        MSGOK msg="UTC Offset must be empty or an integer with a sign."
      OTHERWISE
        RETURN
    ENDCASE
  ENDWHILE
ENDSUB

BEGINSUB name=ReadFinalForm
  $PreparedFieldNotes = $allFieldNotes
  $PreparedFilePath   = $TargetFieldNotesFile
  WHILE 1=1
    $result = Form($finalForm, "")
    BEGINCASE
      CASE $result = "OpenButton"
         RUNPGM pgm="notepad" parms="$TargetFieldNotesFile"

      CASE $result = "UpdateButton"
         $p_filename = $TargetFieldNotesFile
         GOSUB name=PrepareFile

         $p_filename = $TargetFieldNotesFile
         $p_text     = $PreparedFieldNotes
         GOSUB name=WriteTextToFile

      CASE $result = "UploadButton"
         $p_allDrafts = $PreparedFieldNotes
         GOSUB name=UploadFieldNotes
         EXITSUB

      CASE $result = "CloseButton" OR $result = "SystemExit" OR $result = "DelayExit"
         EXITSUB

      OTHERWISE
         IF YESNO("Stisknuto neznámé tlaèítko '$result'.$NL$NLChcete ukonèit program?")
            RETURN
         ENDIF
    ENDCASE
  ENDWHILE
ENDSUB

BEGINSUB name=UploadFieldNotes
  $xx = LIST("allDrafts", "create", $NL)
  $xx = LIST("allDrafts", "replace", $p_allDrafts)

  $p_listname = "allDrafts"
  GOSUB name=RemoveEmptyItemsFromList
  $xx_draftCount = VAL(LIST("allDrafts", "count", ""))

  SHOWSTATUS msg="Going to upload $xx_draftCount log drafts..." height=250 mtype=MULTI

  $xx_lineNo = 1
  WHILE $xx_lineNo <= $xx_draftCount
    $p_lineToParse = LIST("allDrafts", "item", "$xx_lineNo")
    GOSUB name=ParseFieldNoteLineToParameters
    GOSUB name=UploadFieldNote
    $xx_lineNo = $xx_lineNo + 1
  ENDWHILE

  $xx = LIST("allDrafts", "destroy", "")
  SHOWSTATUS msg="Finished uploading $xx_draftCount log drafts." display=OFF
ENDSUB

BEGINSUB name=ParseFieldNoteLineToParameters
  # IN  $p_lineToParse - øádek "ze souboru fieldNotes.txt", který má být rozebrán
  #
  # OUT $p_cacheGcCode - GC kód keše, ke které se loguje
  # OUT $p_logTStamp   - èas, ke kterému se loguje, vèetnì sekund a bez 'Z' na konci
  # OUT $p_logTypeName - typ logu, textovì
  # OUT $p_logText     - text logu
  # Ve všech výstupních datech jsou znaky '&', '<' a '>' nahrazeny HTML/XML entitami.
  #
  $p_text = $p_lineToParse
  GOSUB name=EntityEncode

  $xx = LIST("draft", "create", ",")
  $xx = LIST("draft", "replace", $r_result)

  $p_listname  = "draft"
  $p_separator = ","
  $p_firstItem = 4
  $p_lastItem  = VAL(LIST("draft", "count", ""))
  GOSUB name=JoinArrayItems
  $xx_logText = $r_result

  $p_cacheGcCode = LIST("draft", "item", "1")
  $p_logTStamp   = LIST("draft", "item", "2")
  $p_logTypeName = LIST("draft", "item", "3")
  $p_logText     = REGEXREPLACE("^"+CHR(34)+"(.*)"+CHR(34)+"$", $xx_logText, "$1", "$")

  # V souboru je obvykle s pøesností na minuty, GCAPI chce i sekundy.
  $p_logTStamp   = REGEXREPLACE("T(\d\d:\d\d)Z$",      $p_logTStamp, "T$1:00Z", "$")
  $p_logTStamp   = REGEXREPLACE("T(\d\d:\d\d:\d\d)Z$", $p_logTStamp, "T$1",     "$")

  $xx = LIST("draft", "destroy", "")
ENDSUB

BEGINSUB name=EntityEncode
  # IN  $p_text   - text, ve kterém mají být znaky '&', '<' a '>' XML entitami
  # OUT $r_result - text se znaky nahrazenými entitami
  #
  $r_result = REPLACE("&", "&amp;", $p_text)
  $r_result = REPLACE("<", "&lt;",  $r_result)
  $r_result = REPLACE(">", "&gt;",  $r_result)
ENDSUB

BEGINSUB name=RemoveEmptyItemsFromList
  $xx_current = VAL(LIST($p_listname, "count", ""))
  WHILE $xx_current > 0
    $xx_value = LIST($p_listname, "item", "$xx_current")
    IF ALLTRIM($xx_value) = ""
      $xx = LIST($p_listname, "delete", "$xx_current")
    ENDIF
    $xx_current = $xx_current - 1
  ENDWHILE
ENDSUB

BEGINSUB name=JoinArrayItems
  $xx_item = $p_firstItem
  $r_result = LIST($p_listname, "item", "$xx_item")
  WHILE $xx_item < $p_lastItem
    $xx_item = $xx_item + 1
    $xx = LIST($p_listname, "item", "$xx_item")
    $r_result = "$r_result$p_separator$xx"
  ENDWHILE
ENDSUB

BEGINSUB name=UploadFieldNote
   SHOWSTATUS msg="Uploading '$p_logTypeName' draft for $p_cacheGcCode" height=250 mtype=MULTI

   $xx_postData = $fieldNotesPostData
   GOSUB name=LogTypNameToLogTypeId
   $v_postData = REPLACE("\",       "\\",       $p_logText)
   $v_postData = REPLACE("$_Quote", "\$_Quote", $v_postData)

   $xx_postData = REPLACE("{LOGTYPEID}",   $r_logTypeId,   $xx_postData)
   $xx_postData = REPLACE("{CACHEGCCODE}", $p_cacheGcCode, $xx_postData)
   $xx_postData = REPLACE("{LOGTSTAMP}",   $p_logTStamp,   $xx_postData)
   $xx_postData = REPLACE("{LOGTEXT}",     $v_postData,    $xx_postData)

   $xx_response = GCAPI2("logdrafts", "POST", $xx_postData, "Nahrávám field note")
   IF $_GcApiError
      # Error running api, so show the error message and put it to clipboard, too
      CLIP data=$xx_response
      MSGOK msg="$xx_response"
   ENDIF
ENDSUB

BEGINSUB name=LogTypNameToLogTypeId
   BEGINCASE
   CASE $p_logTypeName = "Found it"
     $r_logTypeId = "2"
   CASE $p_logTypeName = "Attended"
     $r_logTypeId = "10"
   CASE $p_logTypeName = "Webcam Photo Taken"
     $r_logTypeId = "11"
   CASE $p_logTypeName = "Didn't find it"
     $r_logTypeId = "3"
   CASE $p_logTypeName = "Needs Maintenance"
     $r_logTypeId = "45"
   ENDCASE
ENDSUB

#------------------------------------------------------------------------------------------
<Data> Varname=$fieldNotesPostData
{
  "geocacheCode": "{CACHEGCCODE}",
  "geocacheLogType": {
    "id": {LOGTYPEID}
  },
  "note": "{LOGTEXT}",
  "loggedDateUtc": "{LOGTSTAMP}"
}
<enddata>

#------------------------------------------------------------------------------------------
<Data> VarName=$mainForm
Name = Form1
  Type = Form
  Caption = Prepare Logging FieldNotes
  Height = 177
  Width = 506

Name = Label1
  Type = Label
  Height = 13
  Left = 8
  Top = 16
  Width = 117
  Caption = Target Field Notes File:

Name = TargetFieldNotesFile
  Type = File
  Height = 21
  Left = 128
  Top = 8
  Width = 361
  Taborder = 40

Name = Label2
  Type = Label
  Height = 13
  Left = 8
  Top = 40
  Width = 119
  Caption = UTC/GMT Time Offset:

Name = UtcOffset
  Type = Edit
  Height = 21
  Left = 128
  Top = 32
  Width = 33
  Taborder = 50

Name = UseBlogUrl
  Type = Radiobutton
  Height = 20
  Left = 168
  Top = 32
  Width = 73
  Taborder = 60
  Caption = Blog URL

Name = NotFiled
  Type = Radiobutton
  Height = 20
  Left = 240
  Top = 32
  Width = 89
  Taborder = 70
  Caption = "Nezaøazené"

Name = Geopivo
  Type = Radiobutton
  Height = 20
  Left = 336
  Top = 32
  Width = 65
  Taborder = 80
  Caption = Geopivo

Name = AppendToFile
  Type = Checkbox
  Height = 17
  Left = 402
  Top = 32
  Width = 87
  Taborder = 90
  Caption = Append to File

Name = UseStoredBlogName
  Type = Checkbox
  Height = 17
  Left = 168
  Top = 56
  Width = 150
  Taborder = 90
  Caption = Use Stored Blog Name

Name = Label3
  Type = Label
  Height = 13
  Left = 8
  Top = 88
  Width = 57
  Caption = Blog URL:

Name = BlogUrl
  Type = Edit
  Height = 21
  Left = 128
  Top = 80
  Width = 361
  Taborder = 10

Name = OkButton
  Type = Button
  Enter = Yes
  Height = 25
  Left = 320
  Top = 112
  Width = 75
  Taborder = 20
  Caption = OK

Name = CancelButton
  Type = Button
  Escape = Yes
  Height = 25
  Left = 408
  Top = 112
  Width = 75
  Taborder = 30
  Caption = Cancel

<enddata>

#------------------------------------------------------------------------------------------
<Data> VarName=$finalForm
Name = Form2
  Type = Form
  Caption = Field Notes Prepared
  Delay = 15
  Height = 424
  Width = 793

Name = Label21
  Type = Label
  Height = 13
  Left = 8
  Top = 8
  Width = 110
  Caption = Prepared Field Notes:

Name = PreparedFieldNotes
  Type = Memo
  Height = 273
  Left = 8
  Top = 24
  Width = 769
  Taborder = 1

Name = Label1
  Type = Label
  Height = 17
  Left = 8
  Top = 304
  Width = 98
  Caption = Prepared File Path:

Name = PreparedFilePath
  Type = Edit
  Enabled = No
  Height = 21
  Left = 8
  Top = 320
  Width = 769
  Taborder = 2

Name = UpdateButton
  Type = Button
  Height = 25
  Left = 96
  Top = 360
  Width = 153
  Taborder = 12
  Caption = Save Changes to the File

Name = UploadButton
  Type = Button
  Height = 25
  Left = 544
  Top = 360
  Width = 147
  Taborder = 13
  Caption = Upload the Text Above

Name = CloseButton
  Type = Button
  Enter = Yes
  Escape = Yes
  Height = 25
  Left = 696
  Top = 360
  Width = 75
  Taborder = 14
  Caption = Close

Name = OpenButton
  Type = Button
  Height = 25
  Left = 8
  Top = 360
  Width = 81
  Taborder = 15
  Caption = Open File

<enddata>
